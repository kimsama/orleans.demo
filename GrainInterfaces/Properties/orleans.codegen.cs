//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace PlayerProgression
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using PlayerProgression;
    using Orleans;
    using Orleans.Runtime;
    using Orleans.Core;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GameGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGameGrain> instead.")]
                        public static IGameGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGameGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGameGrain> instead.")]
                        public static IGameGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGameGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IGameGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GameGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.IGameGrain")]
        internal class GameGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.IGameGrain
        {
            

            public static IGameGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGameGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGameGrain), (global::Orleans.Runtime.GrainReference gr) => { return new GameGrainReference(gr);}, grainRef, 1810599246);
            }
            
            protected internal GameGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GameGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1810599246;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.IGameGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GameGrainReference input = ((GameGrainReference)(original));
                return ((GameGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GameGrainReference input = ((GameGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GameGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GameGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task PlayerProgression.IGameGrain.UpdateGameStatus(PlayerProgression.GameStatus @status)
            {

                return base.InvokeMethodAsync<object>(-1258392316, new object[] {@status} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IGameGrain.SubscribeGameUpdates(PlayerProgression.IGameObserver @subscriber)
            {
global::Orleans.CodeGeneration.GrainFactoryBase.CheckGrainObserverParamInternal(@subscriber);

                return base.InvokeMethodAsync<object>(-1172521074, new object[] {@subscriber is global::Orleans.Grain ? @subscriber.AsReference<PlayerProgression.IGameObserver>() : @subscriber} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IGameGrain.UnsubscribeGameUpdates(PlayerProgression.IGameObserver @subscriber)
            {
global::Orleans.CodeGeneration.GrainFactoryBase.CheckGrainObserverParamInternal(@subscriber);

                return base.InvokeMethodAsync<object>(-184235562, new object[] {@subscriber is global::Orleans.Grain ? @subscriber.AsReference<PlayerProgression.IGameObserver>() : @subscriber} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.IGameGrain", 1810599246)]
    internal class GameGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1810599246;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1810599246:  // IGameGrain
                        switch (methodId)
                        {
                            case -1258392316: 
                                return ((IGameGrain)grain).UpdateGameStatus((GameStatus)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1172521074: 
                                return ((IGameGrain)grain).SubscribeGameUpdates((IGameObserver)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -184235562: 
                                return ((IGameGrain)grain).UnsubscribeGameUpdates((IGameObserver)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1810599246:  // IGameGrain
                    switch (methodId)
                    {
                        case -1258392316:
                            return "UpdateGameStatus";
                    case -1172521074:
                            return "SubscribeGameUpdates";
                    case -184235562:
                            return "UnsubscribeGameUpdates";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GameObserverFactory
    {
        

            public static IGameObserver Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GameObserverReference.Cast(grainRef);
            }

        private static global::Orleans.CodeGeneration.IGrainMethodInvoker methodInvoker;

        public async static System.Threading.Tasks.Task<IGameObserver> CreateObjectReference(IGameObserver obj)
        {
            if (methodInvoker == null) methodInvoker = new GameObserverMethodInvoker();
            return GameObserverFactory.Cast(await global::Orleans.Runtime.GrainReference.CreateObjectReference(obj, methodInvoker));
        }

        public static System.Threading.Tasks.Task DeleteObjectReference(IGameObserver reference)
        {
            return global::Orleans.Runtime.GrainReference.DeleteObjectReference(reference);
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.IGameObserver")]
        internal class GameObserverReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.IGameObserver
        {
            

            public static IGameObserver Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGameObserver) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGameObserver), (global::Orleans.Runtime.GrainReference gr) => { return new GameObserverReference(gr);}, grainRef, 1092779695);
            }
            
            protected internal GameObserverReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GameObserverReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1092779695;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.IGameObserver";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GameObserverReference input = ((GameObserverReference)(original));
                return ((GameObserverReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GameObserverReference input = ((GameObserverReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GameObserverReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GameObserverMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            void PlayerProgression.IGameObserver.UpdateGameScore(System.Collections.Generic.Dictionary<Int64,Progression> @status)
            {

                    base.InvokeOneWayMethod(-619075749, new object[] {@status} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.IGameObserver", 1092779695)]
    internal class GameObserverMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1092779695;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1092779695:  // IGameObserver
                        switch (methodId)
                        {
                            case -619075749: 
                                ((IGameObserver)grain).UpdateGameScore((System.Collections.Generic.Dictionary<Int64,Progression>)arguments[0]); return System.Threading.Tasks.Task.FromResult((object)true);
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1092779695:  // IGameObserver
                    switch (methodId)
                    {
                        case -619075749:
                            return "UpdateGameScore";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class PlayerGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IPlayerGrain> instead.")]
                        public static IPlayerGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IPlayerGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IPlayerGrain> instead.")]
                        public static IPlayerGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IPlayerGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IPlayerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return PlayerGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.IPlayerGrain")]
        internal class PlayerGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.IPlayerGrain
        {
            

            public static IPlayerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IPlayerGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IPlayerGrain), (global::Orleans.Runtime.GrainReference gr) => { return new PlayerGrainReference(gr);}, grainRef, -1602320946);
            }
            
            protected internal PlayerGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal PlayerGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1602320946;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.IPlayerGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                PlayerGrainReference input = ((PlayerGrainReference)(original));
                return ((PlayerGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                PlayerGrainReference input = ((PlayerGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return PlayerGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return PlayerGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<PlayerProgression.IGameGrain> PlayerProgression.IPlayerGrain.GetGame()
            {

                return base.InvokeMethodAsync<PlayerProgression.IGameGrain>(-978337437, null );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IPlayerGrain.JoinGame(PlayerProgression.IGameGrain @game)
            {

                return base.InvokeMethodAsync<object>(1908871624, new object[] {@game is global::Orleans.Grain ? @game.AsReference<PlayerProgression.IGameGrain>() : @game} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IPlayerGrain.LeaveGame(PlayerProgression.IGameGrain @game)
            {

                return base.InvokeMethodAsync<object>(-1586169980, new object[] {@game is global::Orleans.Grain ? @game.AsReference<PlayerProgression.IGameGrain>() : @game} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IPlayerGrain.Progress(PlayerProgression.Progression @data)
            {

                return base.InvokeMethodAsync<object>(-1198266139, new object[] {@data} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.IPlayerGrain", -1602320946)]
    internal class PlayerGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1602320946;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1602320946:  // IPlayerGrain
                        switch (methodId)
                        {
                            case -978337437: 
                                return ((IPlayerGrain)grain).GetGame().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1908871624: 
                                return ((IPlayerGrain)grain).JoinGame((IGameGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1586169980: 
                                return ((IPlayerGrain)grain).LeaveGame((IGameGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1198266139: 
                                return ((IPlayerGrain)grain).Progress((Progression)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1602320946:  // IPlayerGrain
                    switch (methodId)
                    {
                        case -978337437:
                            return "GetGame";
                    case 1908871624:
                            return "JoinGame";
                    case -1586169980:
                            return "LeaveGame";
                    case -1198266139:
                            return "Progress";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class PlayerProfileFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IPlayerProfile> instead.")]
                        public static IPlayerProfile GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IPlayerProfile), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IPlayerProfile> instead.")]
                        public static IPlayerProfile GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IPlayerProfile), primaryKey, grainClassNamePrefix));
                        }

            public static IPlayerProfile Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return PlayerProfileReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.IPlayerProfile")]
        internal class PlayerProfileReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.IPlayerProfile
        {
            

            public static IPlayerProfile Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IPlayerProfile) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IPlayerProfile), (global::Orleans.Runtime.GrainReference gr) => { return new PlayerProfileReference(gr);}, grainRef, 418296366);
            }
            
            protected internal PlayerProfileReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal PlayerProfileReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 418296366;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.IPlayerProfile";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                PlayerProfileReference input = ((PlayerProfileReference)(original));
                return ((PlayerProfileReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                PlayerProfileReference input = ((PlayerProfileReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return PlayerProfileReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return PlayerProfileMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task PlayerProgression.IPlayerProfile.UpdateProfile(PlayerProgression.Progression @updates)
            {

                return base.InvokeMethodAsync<object>(-1639823597, new object[] {@updates} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.IPlayerProfile", 418296366)]
    internal class PlayerProfileMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 418296366;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 418296366:  // IPlayerProfile
                        switch (methodId)
                        {
                            case -1639823597: 
                                return ((IPlayerProfile)grain).UpdateProfile((Progression)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 418296366:  // IPlayerProfile
                    switch (methodId)
                    {
                        case -1639823597:
                            return "UpdateProfile";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class DispatcherFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IDispatcher> instead.")]
                        public static IDispatcher GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IDispatcher), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IDispatcher> instead.")]
                        public static IDispatcher GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IDispatcher), primaryKey, grainClassNamePrefix));
                        }

            public static IDispatcher Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return DispatcherReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.IDispatcher")]
        internal class DispatcherReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.IDispatcher
        {
            

            public static IDispatcher Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IDispatcher) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IDispatcher), (global::Orleans.Runtime.GrainReference gr) => { return new DispatcherReference(gr);}, grainRef, 707428655);
            }
            
            protected internal DispatcherReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal DispatcherReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 707428655;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.IDispatcher";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                DispatcherReference input = ((DispatcherReference)(original));
                return ((DispatcherReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                DispatcherReference input = ((DispatcherReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return DispatcherReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return DispatcherMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task PlayerProgression.IDispatcher.Heartbeat(byte[] @data)
            {

                return base.InvokeMethodAsync<object>(191938132, new object[] {@data} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.IDispatcher", 707428655)]
    internal class DispatcherMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 707428655;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 707428655:  // IDispatcher
                        switch (methodId)
                        {
                            case 191938132: 
                                return ((IDispatcher)grain).Heartbeat((Byte[])arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 707428655:  // IDispatcher
                    switch (methodId)
                    {
                        case 191938132:
                            return "Heartbeat";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PlayerProgression_GameStatusSerialization
    {
        
        static PlayerProgression_GameStatusSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PlayerProgression.GameStatus input = ((PlayerProgression.GameStatus)(original));
            PlayerProgression.GameStatus result = new PlayerProgression.GameStatus();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Players = ((System.Collections.Generic.Dictionary<System.Int64,PlayerProgression.Progression>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Players)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PlayerProgression.GameStatus input = ((PlayerProgression.GameStatus)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Players, stream, typeof(System.Collections.Generic.Dictionary<System.Int64,PlayerProgression.Progression>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PlayerProgression.GameStatus result = new PlayerProgression.GameStatus();
            result.Players = ((System.Collections.Generic.Dictionary<System.Int64,PlayerProgression.Progression>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.Dictionary<System.Int64,PlayerProgression.Progression>), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PlayerProgression.GameStatus), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PlayerProgression_HeartbeatDataSerialization
    {
        
        static PlayerProgression_HeartbeatDataSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PlayerProgression.HeartbeatData input = ((PlayerProgression.HeartbeatData)(original));
            PlayerProgression.HeartbeatData result = new PlayerProgression.HeartbeatData();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Game = ((System.Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Game)));
            result.Status = ((PlayerProgression.GameStatus)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Status)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PlayerProgression.HeartbeatData input = ((PlayerProgression.HeartbeatData)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Game, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Status, stream, typeof(PlayerProgression.GameStatus));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PlayerProgression.HeartbeatData result = new PlayerProgression.HeartbeatData();
            result.Game = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            result.Status = ((PlayerProgression.GameStatus)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PlayerProgression.GameStatus), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PlayerProgression.HeartbeatData), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PlayerProgression_ProgressionSerialization
    {
        
        static PlayerProgression_ProgressionSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PlayerProgression.Progression input = ((PlayerProgression.Progression)(original));
            PlayerProgression.Progression result = new PlayerProgression.Progression();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Death = input.Death;
            result.Experience = input.Experience;
            result.Kills = input.Kills;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PlayerProgression.Progression input = ((PlayerProgression.Progression)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Death, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Experience, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Kills, stream, typeof(long));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PlayerProgression.Progression result = new PlayerProgression.Progression();
            result.Death = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            result.Experience = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            result.Kills = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PlayerProgression.Progression), DeepCopier, Serializer, Deserializer);
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
