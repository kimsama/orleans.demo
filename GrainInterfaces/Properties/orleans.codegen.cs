//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace PlayerProgression
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using PlayerProgression;
    using Orleans;
    using Orleans.Runtime;
    using Orleans.Core;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class MatchMakerFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IMatchMaker> instead.")]
                        public static IMatchMaker GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IMatchMaker), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IMatchMaker> instead.")]
                        public static IMatchMaker GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IMatchMaker), primaryKey, grainClassNamePrefix));
                        }

            public static IMatchMaker Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return MatchMakerReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.IMatchMaker")]
        internal class MatchMakerReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.IMatchMaker
        {
            

            public static IMatchMaker Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IMatchMaker) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IMatchMaker), (global::Orleans.Runtime.GrainReference gr) => { return new MatchMakerReference(gr);}, grainRef, -25880655);
            }
            
            protected internal MatchMakerReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal MatchMakerReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -25880655;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.IMatchMaker";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                MatchMakerReference input = ((MatchMakerReference)(original));
                return ((MatchMakerReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                MatchMakerReference input = ((MatchMakerReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return MatchMakerReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return MatchMakerMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<System.Guid> PlayerProgression.IMatchMaker.QuickMatch(long @playerId)
            {

                return base.InvokeMethodAsync<System.Guid>(-1506575629, new object[] {@playerId} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.IMatchMaker", -25880655)]
    internal class MatchMakerMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -25880655;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -25880655:  // IMatchMaker
                        switch (methodId)
                        {
                            case -1506575629: 
                                return ((IMatchMaker)grain).QuickMatch((Int64)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -25880655:  // IMatchMaker
                    switch (methodId)
                    {
                        case -1506575629:
                            return "QuickMatch";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ProcessManagerFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IProcessManager> instead.")]
                        public static IProcessManager GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IProcessManager), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IProcessManager> instead.")]
                        public static IProcessManager GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IProcessManager), primaryKey, grainClassNamePrefix));
                        }

            public static IProcessManager Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ProcessManagerReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.IProcessManager")]
        internal class ProcessManagerReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.IProcessManager
        {
            

            public static IProcessManager Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IProcessManager) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IProcessManager), (global::Orleans.Runtime.GrainReference gr) => { return new ProcessManagerReference(gr);}, grainRef, -497668699);
            }
            
            protected internal ProcessManagerReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ProcessManagerReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -497668699;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.IProcessManager";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ProcessManagerReference input = ((ProcessManagerReference)(original));
                return ((ProcessManagerReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ProcessManagerReference input = ((ProcessManagerReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ProcessManagerReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ProcessManagerMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<System.Guid> PlayerProgression.IProcessManager.CreateProcess()
            {

                return base.InvokeMethodAsync<System.Guid>(651444950, null );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IProcessManager.ProcessCreated(System.Guid @processId)
            {

                return base.InvokeMethodAsync<object>(-1044420421, new object[] {@processId} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IProcessManager.ProcessExited(System.Guid @processId)
            {

                return base.InvokeMethodAsync<object>(274862336, new object[] {@processId} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IProcessManager.AddPlayer(System.Guid @gameId, long @playerId)
            {

                return base.InvokeMethodAsync<object>(1165721144, new object[] {@gameId, @playerId} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IProcessManager.StartGame(System.Guid @gameId)
            {

                return base.InvokeMethodAsync<object>(-561513888, new object[] {@gameId} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IProcessManager.SubscribeNotification(PlayerProgression.IProcessMgrObserver @subscriber)
            {
global::Orleans.CodeGeneration.GrainFactoryBase.CheckGrainObserverParamInternal(@subscriber);

                return base.InvokeMethodAsync<object>(940742970, new object[] {@subscriber is global::Orleans.Grain ? @subscriber.AsReference<PlayerProgression.IProcessMgrObserver>() : @subscriber} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IProcessManager.UnsubscribeNotification(PlayerProgression.IProcessMgrObserver @subscriber)
            {
global::Orleans.CodeGeneration.GrainFactoryBase.CheckGrainObserverParamInternal(@subscriber);

                return base.InvokeMethodAsync<object>(1789767630, new object[] {@subscriber is global::Orleans.Grain ? @subscriber.AsReference<PlayerProgression.IProcessMgrObserver>() : @subscriber} );
            }
            
            System.Threading.Tasks.Task<System.Guid> PlayerProgression.IProcessManager.FindAvailableSession()
            {

                return base.InvokeMethodAsync<System.Guid>(526784679, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.IProcessManager", -497668699)]
    internal class ProcessManagerMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -497668699;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -497668699:  // IProcessManager
                        switch (methodId)
                        {
                            case 651444950: 
                                return ((IProcessManager)grain).CreateProcess().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1044420421: 
                                return ((IProcessManager)grain).ProcessCreated((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 274862336: 
                                return ((IProcessManager)grain).ProcessExited((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1165721144: 
                                return ((IProcessManager)grain).AddPlayer((Guid)arguments[0], (Int64)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -561513888: 
                                return ((IProcessManager)grain).StartGame((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 940742970: 
                                return ((IProcessManager)grain).SubscribeNotification((IProcessMgrObserver)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1789767630: 
                                return ((IProcessManager)grain).UnsubscribeNotification((IProcessMgrObserver)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 526784679: 
                                return ((IProcessManager)grain).FindAvailableSession().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -497668699:  // IProcessManager
                    switch (methodId)
                    {
                        case 651444950:
                            return "CreateProcess";
                    case -1044420421:
                            return "ProcessCreated";
                    case 274862336:
                            return "ProcessExited";
                    case 1165721144:
                            return "AddPlayer";
                    case -561513888:
                            return "StartGame";
                    case 940742970:
                            return "SubscribeNotification";
                    case 1789767630:
                            return "UnsubscribeNotification";
                    case 526784679:
                            return "FindAvailableSession";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ProcessMgrObserverFactory
    {
        

            public static IProcessMgrObserver Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ProcessMgrObserverReference.Cast(grainRef);
            }

        private static global::Orleans.CodeGeneration.IGrainMethodInvoker methodInvoker;

        public async static System.Threading.Tasks.Task<IProcessMgrObserver> CreateObjectReference(IProcessMgrObserver obj)
        {
            if (methodInvoker == null) methodInvoker = new ProcessMgrObserverMethodInvoker();
            return ProcessMgrObserverFactory.Cast(await global::Orleans.Runtime.GrainReference.CreateObjectReference(obj, methodInvoker));
        }

        public static System.Threading.Tasks.Task DeleteObjectReference(IProcessMgrObserver reference)
        {
            return global::Orleans.Runtime.GrainReference.DeleteObjectReference(reference);
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.IProcessMgrObserver")]
        internal class ProcessMgrObserverReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.IProcessMgrObserver
        {
            

            public static IProcessMgrObserver Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IProcessMgrObserver) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IProcessMgrObserver), (global::Orleans.Runtime.GrainReference gr) => { return new ProcessMgrObserverReference(gr);}, grainRef, -264133649);
            }
            
            protected internal ProcessMgrObserverReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ProcessMgrObserverReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -264133649;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.IProcessMgrObserver";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ProcessMgrObserverReference input = ((ProcessMgrObserverReference)(original));
                return ((ProcessMgrObserverReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ProcessMgrObserverReference input = ((ProcessMgrObserverReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ProcessMgrObserverReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ProcessMgrObserverMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            void PlayerProgression.IProcessMgrObserver.CreateProcess()
            {

                    base.InvokeOneWayMethod(651444950, null );
            }
            
            void PlayerProgression.IProcessMgrObserver.AddPlayer(System.Guid @gameId, long @playerId)
            {

                    base.InvokeOneWayMethod(1165721144, new object[] {@gameId, @playerId} );
            }
            
            void PlayerProgression.IProcessMgrObserver.StartGame(System.Guid @gameId)
            {

                    base.InvokeOneWayMethod(-561513888, new object[] {@gameId} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.IProcessMgrObserver", -264133649)]
    internal class ProcessMgrObserverMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -264133649;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -264133649:  // IProcessMgrObserver
                        switch (methodId)
                        {
                            case 651444950: 
                                ((IProcessMgrObserver)grain).CreateProcess(); return System.Threading.Tasks.Task.FromResult((object)true);
                            case 1165721144: 
                                ((IProcessMgrObserver)grain).AddPlayer((Guid)arguments[0], (Int64)arguments[1]); return System.Threading.Tasks.Task.FromResult((object)true);
                            case -561513888: 
                                ((IProcessMgrObserver)grain).StartGame((Guid)arguments[0]); return System.Threading.Tasks.Task.FromResult((object)true);
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -264133649:  // IProcessMgrObserver
                    switch (methodId)
                    {
                        case 651444950:
                            return "CreateProcess";
                    case 1165721144:
                            return "AddPlayer";
                    case -561513888:
                            return "StartGame";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GameGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGameGrain> instead.")]
                        public static IGameGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGameGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGameGrain> instead.")]
                        public static IGameGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGameGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IGameGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GameGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.IGameGrain")]
        internal class GameGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.IGameGrain
        {
            

            public static IGameGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGameGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGameGrain), (global::Orleans.Runtime.GrainReference gr) => { return new GameGrainReference(gr);}, grainRef, 1810599246);
            }
            
            protected internal GameGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GameGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1810599246;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.IGameGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GameGrainReference input = ((GameGrainReference)(original));
                return ((GameGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GameGrainReference input = ((GameGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GameGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GameGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task PlayerProgression.IGameGrain.UpdateGameStatistics(PlayerProgression.GameStatus @status)
            {

                return base.InvokeMethodAsync<object>(896056570, new object[] {@status} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IGameGrain.GameStarts(System.Collections.Generic.List<Int64> @players)
            {

                return base.InvokeMethodAsync<object>(-823258890, new object[] {@players} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IGameGrain.GameEnds()
            {

                return base.InvokeMethodAsync<object>(1804983602, null );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IGameGrain.SubscribeSessionStatus(PlayerProgression.IGameObserver @subscriber)
            {
global::Orleans.CodeGeneration.GrainFactoryBase.CheckGrainObserverParamInternal(@subscriber);

                return base.InvokeMethodAsync<object>(492911566, new object[] {@subscriber is global::Orleans.Grain ? @subscriber.AsReference<PlayerProgression.IGameObserver>() : @subscriber} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IGameGrain.UnsubscribeSessionStatus(PlayerProgression.IGameObserver @subscriber)
            {
global::Orleans.CodeGeneration.GrainFactoryBase.CheckGrainObserverParamInternal(@subscriber);

                return base.InvokeMethodAsync<object>(1869986197, new object[] {@subscriber is global::Orleans.Grain ? @subscriber.AsReference<PlayerProgression.IGameObserver>() : @subscriber} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.IGameGrain", 1810599246)]
    internal class GameGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1810599246;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1810599246:  // IGameGrain
                        switch (methodId)
                        {
                            case 896056570: 
                                return ((IGameGrain)grain).UpdateGameStatistics((GameStatus)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -823258890: 
                                return ((IGameGrain)grain).GameStarts((System.Collections.Generic.List<Int64>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1804983602: 
                                return ((IGameGrain)grain).GameEnds().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 492911566: 
                                return ((IGameGrain)grain).SubscribeSessionStatus((IGameObserver)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1869986197: 
                                return ((IGameGrain)grain).UnsubscribeSessionStatus((IGameObserver)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1810599246:  // IGameGrain
                    switch (methodId)
                    {
                        case 896056570:
                            return "UpdateGameStatistics";
                    case -823258890:
                            return "GameStarts";
                    case 1804983602:
                            return "GameEnds";
                    case 492911566:
                            return "SubscribeSessionStatus";
                    case 1869986197:
                            return "UnsubscribeSessionStatus";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GameObserverFactory
    {
        

            public static IGameObserver Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GameObserverReference.Cast(grainRef);
            }

        private static global::Orleans.CodeGeneration.IGrainMethodInvoker methodInvoker;

        public async static System.Threading.Tasks.Task<IGameObserver> CreateObjectReference(IGameObserver obj)
        {
            if (methodInvoker == null) methodInvoker = new GameObserverMethodInvoker();
            return GameObserverFactory.Cast(await global::Orleans.Runtime.GrainReference.CreateObjectReference(obj, methodInvoker));
        }

        public static System.Threading.Tasks.Task DeleteObjectReference(IGameObserver reference)
        {
            return global::Orleans.Runtime.GrainReference.DeleteObjectReference(reference);
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.IGameObserver")]
        internal class GameObserverReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.IGameObserver
        {
            

            public static IGameObserver Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGameObserver) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGameObserver), (global::Orleans.Runtime.GrainReference gr) => { return new GameObserverReference(gr);}, grainRef, 1092779695);
            }
            
            protected internal GameObserverReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GameObserverReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1092779695;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.IGameObserver";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GameObserverReference input = ((GameObserverReference)(original));
                return ((GameObserverReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GameObserverReference input = ((GameObserverReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GameObserverReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GameObserverMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            void PlayerProgression.IGameObserver.UpdateSessionStatus(System.Guid @id, bool @available)
            {

                    base.InvokeOneWayMethod(210109482, new object[] {@id, @available} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.IGameObserver", 1092779695)]
    internal class GameObserverMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1092779695;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1092779695:  // IGameObserver
                        switch (methodId)
                        {
                            case 210109482: 
                                ((IGameObserver)grain).UpdateSessionStatus((Guid)arguments[0], (Boolean)arguments[1]); return System.Threading.Tasks.Task.FromResult((object)true);
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1092779695:  // IGameObserver
                    switch (methodId)
                    {
                        case 210109482:
                            return "UpdateSessionStatus";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class PlayerGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IPlayerGrain> instead.")]
                        public static IPlayerGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IPlayerGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IPlayerGrain> instead.")]
                        public static IPlayerGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IPlayerGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IPlayerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return PlayerGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.IPlayerGrain")]
        internal class PlayerGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.IPlayerGrain
        {
            

            public static IPlayerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IPlayerGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IPlayerGrain), (global::Orleans.Runtime.GrainReference gr) => { return new PlayerGrainReference(gr);}, grainRef, -1602320946);
            }
            
            protected internal PlayerGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal PlayerGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1602320946;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.IPlayerGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                PlayerGrainReference input = ((PlayerGrainReference)(original));
                return ((PlayerGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                PlayerGrainReference input = ((PlayerGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return PlayerGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return PlayerGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task PlayerProgression.IPlayerGrain.JoinGame(PlayerProgression.IGameGrain @game)
            {

                return base.InvokeMethodAsync<object>(1908871624, new object[] {@game is global::Orleans.Grain ? @game.AsReference<PlayerProgression.IGameGrain>() : @game} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IPlayerGrain.LeaveGame(PlayerProgression.IGameGrain @game)
            {

                return base.InvokeMethodAsync<object>(-1586169980, new object[] {@game is global::Orleans.Grain ? @game.AsReference<PlayerProgression.IGameGrain>() : @game} );
            }
            
            System.Threading.Tasks.Task<System.Guid> PlayerProgression.IPlayerGrain.QuickMatch()
            {

                return base.InvokeMethodAsync<System.Guid>(-553066157, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.IPlayerGrain", -1602320946)]
    internal class PlayerGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1602320946;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1602320946:  // IPlayerGrain
                        switch (methodId)
                        {
                            case 1908871624: 
                                return ((IPlayerGrain)grain).JoinGame((IGameGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1586169980: 
                                return ((IPlayerGrain)grain).LeaveGame((IGameGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -553066157: 
                                return ((IPlayerGrain)grain).QuickMatch().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1602320946:  // IPlayerGrain
                    switch (methodId)
                    {
                        case 1908871624:
                            return "JoinGame";
                    case -1586169980:
                            return "LeaveGame";
                    case -553066157:
                            return "QuickMatch";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class DispatcherFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IDispatcher> instead.")]
                        public static IDispatcher GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IDispatcher), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IDispatcher> instead.")]
                        public static IDispatcher GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IDispatcher), primaryKey, grainClassNamePrefix));
                        }

            public static IDispatcher Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return DispatcherReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.IDispatcher")]
        internal class DispatcherReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.IDispatcher
        {
            

            public static IDispatcher Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IDispatcher) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IDispatcher), (global::Orleans.Runtime.GrainReference gr) => { return new DispatcherReference(gr);}, grainRef, 707428655);
            }
            
            protected internal DispatcherReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal DispatcherReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 707428655;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.IDispatcher";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                DispatcherReference input = ((DispatcherReference)(original));
                return ((DispatcherReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                DispatcherReference input = ((DispatcherReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return DispatcherReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return DispatcherMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task PlayerProgression.IDispatcher.Heartbeat(byte[] @data)
            {

                return base.InvokeMethodAsync<object>(191938132, new object[] {@data} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IDispatcher.GameEnds(byte[] @data)
            {

                return base.InvokeMethodAsync<object>(-805292067, new object[] {@data} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IDispatcher.GameStarts(byte[] @data)
            {

                return base.InvokeMethodAsync<object>(2090791833, new object[] {@data} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.IDispatcher", 707428655)]
    internal class DispatcherMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 707428655;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 707428655:  // IDispatcher
                        switch (methodId)
                        {
                            case 191938132: 
                                return ((IDispatcher)grain).Heartbeat((Byte[])arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -805292067: 
                                return ((IDispatcher)grain).GameEnds((Byte[])arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2090791833: 
                                return ((IDispatcher)grain).GameStarts((Byte[])arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 707428655:  // IDispatcher
                    switch (methodId)
                    {
                        case 191938132:
                            return "Heartbeat";
                    case -805292067:
                            return "GameEnds";
                    case 2090791833:
                            return "GameStarts";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PlayerProgression_GameStatusSerialization
    {
        
        static PlayerProgression_GameStatusSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PlayerProgression.GameStatus input = ((PlayerProgression.GameStatus)(original));
            PlayerProgression.GameStatus result = new PlayerProgression.GameStatus();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Status = ((System.Collections.Generic.Dictionary<System.Int64,PlayerProgression.Progression>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Status)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PlayerProgression.GameStatus input = ((PlayerProgression.GameStatus)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Status, stream, typeof(System.Collections.Generic.Dictionary<System.Int64,PlayerProgression.Progression>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PlayerProgression.GameStatus result = new PlayerProgression.GameStatus();
            result.Status = ((System.Collections.Generic.Dictionary<System.Int64,PlayerProgression.Progression>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.Dictionary<System.Int64,PlayerProgression.Progression>), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PlayerProgression.GameStatus), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PlayerProgression_ProgressionSerialization
    {
        
        static PlayerProgression_ProgressionSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PlayerProgression.Progression input = ((PlayerProgression.Progression)(original));
            PlayerProgression.Progression result = new PlayerProgression.Progression();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Death = input.Death;
            result.Experience = input.Experience;
            result.Kills = input.Kills;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PlayerProgression.Progression input = ((PlayerProgression.Progression)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Death, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Experience, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Kills, stream, typeof(long));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PlayerProgression.Progression result = new PlayerProgression.Progression();
            result.Death = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            result.Experience = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            result.Kills = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PlayerProgression.Progression), DeepCopier, Serializer, Deserializer);
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
