//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace PlayerProgression.Common
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using PlayerProgression.Common;
    using Orleans;
    using Orleans.Runtime;
    using Orleans.Core;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GrainStateManagerFactory<T>
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGrainStateManager<T>> instead.")]
                        public static IGrainStateManager<T> GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGrainStateManager<T>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGrainStateManager<T>> instead.")]
                        public static IGrainStateManager<T> GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGrainStateManager<T>), primaryKey, grainClassNamePrefix));
                        }

            public static IGrainStateManager<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GrainStateManagerReference<T>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.Common.IGrainStateManager<T>")]
        internal class GrainStateManagerReference<T> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.Common.IGrainStateManager<T>
        
        {
            

            public static IGrainStateManager<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGrainStateManager<T>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGrainStateManager<T>), (global::Orleans.Runtime.GrainReference gr) => { return new GrainStateManagerReference<T>(gr);}, grainRef, 1624920985);
            }
            
            protected internal GrainStateManagerReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GrainStateManagerReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1624920985;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.Common.IGrainStateManager<T>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GrainStateManagerReference<T> input = ((GrainStateManagerReference<T>)(original));
                return ((GrainStateManagerReference<T>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GrainStateManagerReference<T> input = ((GrainStateManagerReference<T>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GrainStateManagerReference<T>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1411129602));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GrainStateManagerMethodInvoker<T>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<T> PlayerProgression.Common.IGrainStateManager<T>.GetGrainState(System.Guid @primaryKey)
            {

                return base.InvokeMethodAsync<T>(-469940391, new object[] {@primaryKey} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.Common.IGrainStateManager<T>.AddGrainState(System.Guid @primaryKey)
            {

                return base.InvokeMethodAsync<object>(-1641608289, new object[] {@primaryKey} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.Common.IGrainStateManager<T>.UpdateGrainState(System.Guid @primaryKey, T @state)
            {

                return base.InvokeMethodAsync<object>(1860823552, new object[] {@primaryKey, @state} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.Common.IGrainStateManager<T>.RemoveGrainState(System.Guid @primaryKey)
            {

                return base.InvokeMethodAsync<object>(-620800765, new object[] {@primaryKey} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.Common.IGrainStateManager<T>.Init(int @replicas, int @slotCount)
            {

                return base.InvokeMethodAsync<object>(-47181754, new object[] {@replicas, @slotCount} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.Common.IGrainStateManager<T>.AddSlot()
            {

                return base.InvokeMethodAsync<object>(2142459477, null );
            }
            
            System.Threading.Tasks.Task<System.Guid> PlayerProgression.Common.IGrainStateManager<T>.GetGrain(GrainSelector<T> @selector)
            {

                return base.InvokeMethodAsync<System.Guid>(-1192629697, new object[] {@selector} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.Common.IGrainStateManager<T>", 1624920985)]
    internal class GrainStateManagerMethodInvoker<T> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1624920985;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1624920985:  // IGrainStateManager`1
                        switch (methodId)
                        {
                            case -469940391: 
                                return ((IGrainStateManager<T>)grain).GetGrainState((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1641608289: 
                                return ((IGrainStateManager<T>)grain).AddGrainState((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1860823552: 
                                return ((IGrainStateManager<T>)grain).UpdateGrainState((Guid)arguments[0], (T)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -620800765: 
                                return ((IGrainStateManager<T>)grain).RemoveGrainState((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -47181754: 
                                return ((IGrainStateManager<T>)grain).Init((Int32)arguments[0], (Int32)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2142459477: 
                                return ((IGrainStateManager<T>)grain).AddSlot().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1192629697: 
                                return ((IGrainStateManager<T>)grain).GetGrain((GrainSelector<T>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1624920985:  // IGrainStateManager`1
                    switch (methodId)
                    {
                        case -469940391:
                            return "GetGrainState";
                    case -1641608289:
                            return "AddGrainState";
                    case 1860823552:
                            return "UpdateGrainState";
                    case -620800765:
                            return "RemoveGrainState";
                    case -47181754:
                            return "Init";
                    case 2142459477:
                            return "AddSlot";
                    case -1192629697:
                            return "GetGrain";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GrainStateSlotFactory<T>
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGrainStateSlot<T>> instead.")]
                        public static IGrainStateSlot<T> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGrainStateSlot<T>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGrainStateSlot<T>> instead.")]
                        public static IGrainStateSlot<T> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGrainStateSlot<T>), primaryKey, grainClassNamePrefix));
                        }

            public static IGrainStateSlot<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GrainStateSlotReference<T>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.Common.IGrainStateSlot<T>")]
        internal class GrainStateSlotReference<T> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.Common.IGrainStateSlot<T>
        
        {
            

            public static IGrainStateSlot<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGrainStateSlot<T>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGrainStateSlot<T>), (global::Orleans.Runtime.GrainReference gr) => { return new GrainStateSlotReference<T>(gr);}, grainRef, -246752513);
            }
            
            protected internal GrainStateSlotReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GrainStateSlotReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -246752513;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.Common.IGrainStateSlot<T>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GrainStateSlotReference<T> input = ((GrainStateSlotReference<T>)(original));
                return ((GrainStateSlotReference<T>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GrainStateSlotReference<T> input = ((GrainStateSlotReference<T>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GrainStateSlotReference<T>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1427784396));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GrainStateSlotMethodInvoker<T>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<T> PlayerProgression.Common.IGrainStateSlot<T>.GetGrainState(System.Guid @primaryKey)
            {

                return base.InvokeMethodAsync<T>(-469940391, new object[] {@primaryKey} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.Common.IGrainStateSlot<T>.AddGrainState(System.Guid @primaryKey)
            {

                return base.InvokeMethodAsync<object>(-1641608289, new object[] {@primaryKey} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.Common.IGrainStateSlot<T>.RemoveGrainState(System.Guid @primaryKey)
            {

                return base.InvokeMethodAsync<object>(-620800765, new object[] {@primaryKey} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.Common.IGrainStateSlot<T>.UpdateGrainState(System.Guid @primaryKey, T @state)
            {

                return base.InvokeMethodAsync<object>(1860823552, new object[] {@primaryKey, @state} );
            }
            
            System.Threading.Tasks.Task<System.Guid> PlayerProgression.Common.IGrainStateSlot<T>.GetGrain(GrainSelector<T> @selector)
            {

                return base.InvokeMethodAsync<System.Guid>(-1192629697, new object[] {@selector} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.Common.IGrainStateSlot<T>", -246752513)]
    internal class GrainStateSlotMethodInvoker<T> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -246752513;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -246752513:  // IGrainStateSlot`1
                        switch (methodId)
                        {
                            case -469940391: 
                                return ((IGrainStateSlot<T>)grain).GetGrainState((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1641608289: 
                                return ((IGrainStateSlot<T>)grain).AddGrainState((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -620800765: 
                                return ((IGrainStateSlot<T>)grain).RemoveGrainState((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1860823552: 
                                return ((IGrainStateSlot<T>)grain).UpdateGrainState((Guid)arguments[0], (T)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1192629697: 
                                return ((IGrainStateSlot<T>)grain).GetGrain((GrainSelector<T>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -246752513:  // IGrainStateSlot`1
                    switch (methodId)
                    {
                        case -469940391:
                            return "GetGrainState";
                    case -1641608289:
                            return "AddGrainState";
                    case -620800765:
                            return "RemoveGrainState";
                    case 1860823552:
                            return "UpdateGrainState";
                    case -1192629697:
                            return "GetGrain";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GrainStateProxyFactory<T>
    
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGrainStateProxy<T>> instead.")]
                        public static IGrainStateProxy<T> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGrainStateProxy<T>), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGrainStateProxy<T>> instead.")]
                        public static IGrainStateProxy<T> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGrainStateProxy<T>), primaryKey, grainClassNamePrefix));
                        }

            public static IGrainStateProxy<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GrainStateProxyReference<T>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.Common.IGrainStateProxy<T>")]
        internal class GrainStateProxyReference<T> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.Common.IGrainStateProxy<T>
        
        {
            

            public static IGrainStateProxy<T> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGrainStateProxy<T>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGrainStateProxy<T>), (global::Orleans.Runtime.GrainReference gr) => { return new GrainStateProxyReference<T>(gr);}, grainRef, 1460086779);
            }
            
            protected internal GrainStateProxyReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GrainStateProxyReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1460086779;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.Common.IGrainStateProxy<T>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GrainStateProxyReference<T> input = ((GrainStateProxyReference<T>)(original));
                return ((GrainStateProxyReference<T>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GrainStateProxyReference<T> input = ((GrainStateProxyReference<T>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GrainStateProxyReference<T>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1720498652));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GrainStateProxyMethodInvoker<T>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task PlayerProgression.Common.IGrainStateProxy<T>.AddGrainState(System.Guid @primaryKey)
            {

                return base.InvokeMethodAsync<object>(-1641608289, new object[] {@primaryKey} );
            }
            
            System.Threading.Tasks.Task<T> PlayerProgression.Common.IGrainStateProxy<T>.GetGrainState(System.Guid @primaryKey)
            {

                return base.InvokeMethodAsync<T>(-469940391, new object[] {@primaryKey} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.Common.IGrainStateProxy<T>.RemoveGrainState(System.Guid @primaryKey)
            {

                return base.InvokeMethodAsync<object>(-620800765, new object[] {@primaryKey} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.Common.IGrainStateProxy<T>.UpdateGrainState(System.Guid @primaryKey, T @state)
            {

                return base.InvokeMethodAsync<object>(1860823552, new object[] {@primaryKey, @state} );
            }
            
            System.Threading.Tasks.Task<System.Guid> PlayerProgression.Common.IGrainStateProxy<T>.GetGrain(GrainSelector<T> @selector)
            {

                return base.InvokeMethodAsync<System.Guid>(-1192629697, new object[] {@selector} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.Common.IGrainStateProxy<T>", 1460086779)]
    internal class GrainStateProxyMethodInvoker<T> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1460086779;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1460086779:  // IGrainStateProxy`1
                        switch (methodId)
                        {
                            case -1641608289: 
                                return ((IGrainStateProxy<T>)grain).AddGrainState((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -469940391: 
                                return ((IGrainStateProxy<T>)grain).GetGrainState((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -620800765: 
                                return ((IGrainStateProxy<T>)grain).RemoveGrainState((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1860823552: 
                                return ((IGrainStateProxy<T>)grain).UpdateGrainState((Guid)arguments[0], (T)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1192629697: 
                                return ((IGrainStateProxy<T>)grain).GetGrain((GrainSelector<T>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1460086779:  // IGrainStateProxy`1
                    switch (methodId)
                    {
                        case -1641608289:
                            return "AddGrainState";
                    case -469940391:
                            return "GetGrainState";
                    case -620800765:
                            return "RemoveGrainState";
                    case 1860823552:
                            return "UpdateGrainState";
                    case -1192629697:
                            return "GetGrain";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class GrainSelectorGenericMaster
    {
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PlayerProgression.Common.GrainSelector<>), GrainSelectorGenericMaster.GenericCopier, GrainSelectorGenericMaster.GenericSerializer, GrainSelectorGenericMaster.GenericDeserializer);
        }
        
        public static System.Type CreateConcreteType(System.Type[] typeParams)
        {
            return typeof(PlayerProgression_Common_GrainSelectorSerialization<>).MakeGenericType(typeParams);
        }
        
        public static object GenericCopier(object obj)
        {
            System.Type t = GrainSelectorGenericMaster.CreateConcreteType(obj.GetType().GetGenericArguments());
            System.Reflection.MethodInfo f = t.GetMethod("DeepCopier");
            object[] args = new object[] {
                    obj};
            return f.Invoke(null, args);
        }
        
        public static void GenericSerializer(object input, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            System.Type t = GrainSelectorGenericMaster.CreateConcreteType(input.GetType().GetGenericArguments());
            System.Reflection.MethodInfo f = t.GetMethod("Serializer");
            object[] args = new object[] {
                    input,
                    stream,
                    expected};
            f.Invoke(null, args);
        }
        
        public static object GenericDeserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            System.Type t = GrainSelectorGenericMaster.CreateConcreteType(expected.GetGenericArguments());
            System.Reflection.MethodInfo f = t.GetMethod("Deserializer");
            object[] args = new object[] {
                    expected,
                    stream};
            return f.Invoke(null, args);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class PlayerProgression_Common_GrainSelectorSerialization<T>
    
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        static PlayerProgression_Common_GrainSelectorSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PlayerProgression.Common.GrainSelector<T> input = ((PlayerProgression.Common.GrainSelector<T>)(original));
            PlayerProgression.Common.GrainSelector<T> result = ((PlayerProgression.Common.GrainSelector<T>)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(GrainSelector<T>))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = fieldInfo1.GetValue(input);
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo2.GetValue(input));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo3.GetValue(input));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = fieldInfo4.GetValue(input);
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = fieldInfo5.GetValue(input);
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo6.GetValue(input));
            fieldInfo6.SetValue(objResult, temp6);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PlayerProgression.Common.GrainSelector<T> input = ((PlayerProgression.Common.GrainSelector<T>)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(System.IntPtr));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo2.GetValue(input), stream, typeof(object));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo3.GetValue(input), stream, typeof(object));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo4.GetValue(input), stream, typeof(System.IntPtr));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo5.GetValue(input), stream, typeof(System.IntPtr));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo6.GetValue(input), stream, typeof(object));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PlayerProgression.Common.GrainSelector<T> result = ((PlayerProgression.Common.GrainSelector<T>)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(GrainSelector<T>))));
            object objResult = ((object)(result));
            object temp1 = ((System.IntPtr)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.IntPtr), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((object)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(object), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((object)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(object), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.IntPtr)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.IntPtr), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((System.IntPtr)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.IntPtr), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((object)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(object), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PlayerProgression.Common.GrainSelector<T>), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(System.MulticastDelegate).GetField("_invocationCount", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(System.MulticastDelegate).GetField("_invocationList", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(PlayerProgression.Common.GrainSelector<T>).GetField("_methodBase", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(PlayerProgression.Common.GrainSelector<T>).GetField("_methodPtr", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(PlayerProgression.Common.GrainSelector<T>).GetField("_methodPtrAux", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(PlayerProgression.Common.GrainSelector<T>).GetField("_target", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
}
namespace PlayerProgression.Game
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    using Orleans.Core;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GameRoomFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGameRoom> instead.")]
                        public static IGameRoom GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGameRoom), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGameRoom> instead.")]
                        public static IGameRoom GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGameRoom), primaryKey, grainClassNamePrefix));
                        }

            public static IGameRoom Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GameRoomReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.Game.IGameRoom")]
        internal class GameRoomReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.Game.IGameRoom
        {
            

            public static IGameRoom Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGameRoom) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGameRoom), (global::Orleans.Runtime.GrainReference gr) => { return new GameRoomReference(gr);}, grainRef, -1756075968);
            }
            
            protected internal GameRoomReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GameRoomReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1756075968;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.Game.IGameRoom";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GameRoomReference input = ((GameRoomReference)(original));
                return ((GameRoomReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GameRoomReference input = ((GameRoomReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GameRoomReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GameRoomMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<System.Guid> PlayerProgression.Game.IGameRoom.AddPlayer(long @playerId)
            {

                return base.InvokeMethodAsync<System.Guid>(-1839323170, new object[] {@playerId} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.Game.IGameRoom.StartGame()
            {

                return base.InvokeMethodAsync<object>(797923165, null );
            }
            
            System.Threading.Tasks.Task PlayerProgression.Game.IGameRoom.Subscribe(PlayerProgression.Game.IRoomObserver @observer)
            {
global::Orleans.CodeGeneration.GrainFactoryBase.CheckGrainObserverParamInternal(@observer);

                return base.InvokeMethodAsync<object>(-268291772, new object[] {@observer is global::Orleans.Grain ? @observer.AsReference<PlayerProgression.Game.IRoomObserver>() : @observer} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.Game.IGameRoom.Unsubscribe(PlayerProgression.Game.IRoomObserver @observer)
            {
global::Orleans.CodeGeneration.GrainFactoryBase.CheckGrainObserverParamInternal(@observer);

                return base.InvokeMethodAsync<object>(-1937911738, new object[] {@observer is global::Orleans.Grain ? @observer.AsReference<PlayerProgression.Game.IRoomObserver>() : @observer} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.Game.IGameRoom", -1756075968)]
    internal class GameRoomMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1756075968;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1756075968:  // IGameRoom
                        switch (methodId)
                        {
                            case -1839323170: 
                                return ((IGameRoom)grain).AddPlayer((Int64)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 797923165: 
                                return ((IGameRoom)grain).StartGame().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -268291772: 
                                return ((IGameRoom)grain).Subscribe((IRoomObserver)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1937911738: 
                                return ((IGameRoom)grain).Unsubscribe((IRoomObserver)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1756075968:  // IGameRoom
                    switch (methodId)
                    {
                        case -1839323170:
                            return "AddPlayer";
                    case 797923165:
                            return "StartGame";
                    case -268291772:
                            return "Subscribe";
                    case -1937911738:
                            return "Unsubscribe";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class RoomObserverFactory
    {
        

            public static IRoomObserver Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return RoomObserverReference.Cast(grainRef);
            }

        private static global::Orleans.CodeGeneration.IGrainMethodInvoker methodInvoker;

        public async static System.Threading.Tasks.Task<IRoomObserver> CreateObjectReference(IRoomObserver obj)
        {
            if (methodInvoker == null) methodInvoker = new RoomObserverMethodInvoker();
            return RoomObserverFactory.Cast(await global::Orleans.Runtime.GrainReference.CreateObjectReference(obj, methodInvoker));
        }

        public static System.Threading.Tasks.Task DeleteObjectReference(IRoomObserver reference)
        {
            return global::Orleans.Runtime.GrainReference.DeleteObjectReference(reference);
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.Game.IRoomObserver")]
        internal class RoomObserverReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.Game.IRoomObserver
        {
            

            public static IRoomObserver Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IRoomObserver) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IRoomObserver), (global::Orleans.Runtime.GrainReference gr) => { return new RoomObserverReference(gr);}, grainRef, -476724802);
            }
            
            protected internal RoomObserverReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal RoomObserverReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -476724802;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.Game.IRoomObserver";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                RoomObserverReference input = ((RoomObserverReference)(original));
                return ((RoomObserverReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                RoomObserverReference input = ((RoomObserverReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return RoomObserverReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return RoomObserverMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            void PlayerProgression.Game.IRoomObserver.GameStart(System.Guid @gameId, int @seconds)
            {

                    base.InvokeOneWayMethod(-922523574, new object[] {@gameId, @seconds} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.Game.IRoomObserver", -476724802)]
    internal class RoomObserverMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -476724802;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -476724802:  // IRoomObserver
                        switch (methodId)
                        {
                            case -922523574: 
                                ((IRoomObserver)grain).GameStart((Guid)arguments[0], (Int32)arguments[1]); return System.Threading.Tasks.Task.FromResult((object)true);
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -476724802:  // IRoomObserver
                    switch (methodId)
                    {
                        case -922523574:
                            return "GameStart";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class MatchMakerFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IMatchMaker> instead.")]
                        public static IMatchMaker GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IMatchMaker), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IMatchMaker> instead.")]
                        public static IMatchMaker GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IMatchMaker), primaryKey, grainClassNamePrefix));
                        }

            public static IMatchMaker Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return MatchMakerReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.Game.IMatchMaker")]
        internal class MatchMakerReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.Game.IMatchMaker
        {
            

            public static IMatchMaker Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IMatchMaker) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IMatchMaker), (global::Orleans.Runtime.GrainReference gr) => { return new MatchMakerReference(gr);}, grainRef, 2117001699);
            }
            
            protected internal MatchMakerReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal MatchMakerReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 2117001699;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.Game.IMatchMaker";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                MatchMakerReference input = ((MatchMakerReference)(original));
                return ((MatchMakerReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                MatchMakerReference input = ((MatchMakerReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return MatchMakerReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return MatchMakerMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<System.Guid> PlayerProgression.Game.IMatchMaker.QuickMatch(long @playerId)
            {

                return base.InvokeMethodAsync<System.Guid>(-1506575629, new object[] {@playerId} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.Game.IMatchMaker", 2117001699)]
    internal class MatchMakerMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 2117001699;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 2117001699:  // IMatchMaker
                        switch (methodId)
                        {
                            case -1506575629: 
                                return ((IMatchMaker)grain).QuickMatch((Int64)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 2117001699:  // IMatchMaker
                    switch (methodId)
                    {
                        case -1506575629:
                            return "QuickMatch";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GameGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGameGrain> instead.")]
                        public static IGameGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGameGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IGameGrain> instead.")]
                        public static IGameGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IGameGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IGameGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GameGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.Game.IGameGrain")]
        internal class GameGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.Game.IGameGrain
        {
            

            public static IGameGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IGameGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IGameGrain), (global::Orleans.Runtime.GrainReference gr) => { return new GameGrainReference(gr);}, grainRef, -42234815);
            }
            
            protected internal GameGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GameGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -42234815;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.Game.IGameGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GameGrainReference input = ((GameGrainReference)(original));
                return ((GameGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GameGrainReference input = ((GameGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GameGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GameGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task PlayerProgression.Game.IGameGrain.UpdateGameStatistics(PlayerProgression.GameStatus @status)
            {

                return base.InvokeMethodAsync<object>(896056570, new object[] {@status} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.Game.IGameGrain.GameStarts(System.Collections.Generic.List<Int64> @players)
            {

                return base.InvokeMethodAsync<object>(-823258890, new object[] {@players} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.Game.IGameGrain.GameEnds()
            {

                return base.InvokeMethodAsync<object>(1804983602, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.Game.IGameGrain", -42234815)]
    internal class GameGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -42234815;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -42234815:  // IGameGrain
                        switch (methodId)
                        {
                            case 896056570: 
                                return ((IGameGrain)grain).UpdateGameStatistics((PlayerProgression.GameStatus)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -823258890: 
                                return ((IGameGrain)grain).GameStarts((System.Collections.Generic.List<Int64>)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1804983602: 
                                return ((IGameGrain)grain).GameEnds().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -42234815:  // IGameGrain
                    switch (methodId)
                    {
                        case 896056570:
                            return "UpdateGameStatistics";
                    case -823258890:
                            return "GameStarts";
                    case 1804983602:
                            return "GameEnds";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
namespace PlayerProgression.ProcessManagement
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    using Orleans.Core;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ProcessManagerFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IProcessManager> instead.")]
                        public static IProcessManager GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IProcessManager), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IProcessManager> instead.")]
                        public static IProcessManager GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IProcessManager), primaryKey, grainClassNamePrefix));
                        }

            public static IProcessManager Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ProcessManagerReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.ProcessManagement.IProcessManager")]
        internal class ProcessManagerReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.ProcessManagement.IProcessManager
        {
            

            public static IProcessManager Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IProcessManager) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IProcessManager), (global::Orleans.Runtime.GrainReference gr) => { return new ProcessManagerReference(gr);}, grainRef, 709694133);
            }
            
            protected internal ProcessManagerReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ProcessManagerReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 709694133;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.ProcessManagement.IProcessManager";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ProcessManagerReference input = ((ProcessManagerReference)(original));
                return ((ProcessManagerReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ProcessManagerReference input = ((ProcessManagerReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ProcessManagerReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ProcessManagerMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<System.Guid> PlayerProgression.ProcessManagement.IProcessManager.GetProcess()
            {

                return base.InvokeMethodAsync<System.Guid>(-1754594990, null );
            }
            
            System.Threading.Tasks.Task PlayerProgression.ProcessManagement.IProcessManager.ProcessCreated(System.Guid @processId)
            {

                return base.InvokeMethodAsync<object>(-1044420421, new object[] {@processId} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.ProcessManagement.IProcessManager.ProcessExited(System.Guid @processId)
            {

                return base.InvokeMethodAsync<object>(274862336, new object[] {@processId} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.ProcessManagement.IProcessManager.AddPlayer(System.Guid @gameId, long @playerId)
            {

                return base.InvokeMethodAsync<object>(1165721144, new object[] {@gameId, @playerId} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.ProcessManagement.IProcessManager.StartGame(System.Guid @gameId)
            {

                return base.InvokeMethodAsync<object>(-561513888, new object[] {@gameId} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.ProcessManagement.IProcessManager.SubscribeNotification(PlayerProgression.ProcessManagement.IProcessMgrObserver @subscriber)
            {
global::Orleans.CodeGeneration.GrainFactoryBase.CheckGrainObserverParamInternal(@subscriber);

                return base.InvokeMethodAsync<object>(940742970, new object[] {@subscriber is global::Orleans.Grain ? @subscriber.AsReference<PlayerProgression.ProcessManagement.IProcessMgrObserver>() : @subscriber} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.ProcessManagement.IProcessManager.UnsubscribeNotification(PlayerProgression.ProcessManagement.IProcessMgrObserver @subscriber)
            {
global::Orleans.CodeGeneration.GrainFactoryBase.CheckGrainObserverParamInternal(@subscriber);

                return base.InvokeMethodAsync<object>(1789767630, new object[] {@subscriber is global::Orleans.Grain ? @subscriber.AsReference<PlayerProgression.ProcessManagement.IProcessMgrObserver>() : @subscriber} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.ProcessManagement.IProcessManager", 709694133)]
    internal class ProcessManagerMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 709694133;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 709694133:  // IProcessManager
                        switch (methodId)
                        {
                            case -1754594990: 
                                return ((IProcessManager)grain).GetProcess().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1044420421: 
                                return ((IProcessManager)grain).ProcessCreated((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 274862336: 
                                return ((IProcessManager)grain).ProcessExited((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1165721144: 
                                return ((IProcessManager)grain).AddPlayer((Guid)arguments[0], (Int64)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -561513888: 
                                return ((IProcessManager)grain).StartGame((Guid)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 940742970: 
                                return ((IProcessManager)grain).SubscribeNotification((IProcessMgrObserver)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1789767630: 
                                return ((IProcessManager)grain).UnsubscribeNotification((IProcessMgrObserver)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 709694133:  // IProcessManager
                    switch (methodId)
                    {
                        case -1754594990:
                            return "GetProcess";
                    case -1044420421:
                            return "ProcessCreated";
                    case 274862336:
                            return "ProcessExited";
                    case 1165721144:
                            return "AddPlayer";
                    case -561513888:
                            return "StartGame";
                    case 940742970:
                            return "SubscribeNotification";
                    case 1789767630:
                            return "UnsubscribeNotification";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ProcessMgrObserverFactory
    {
        

            public static IProcessMgrObserver Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ProcessMgrObserverReference.Cast(grainRef);
            }

        private static global::Orleans.CodeGeneration.IGrainMethodInvoker methodInvoker;

        public async static System.Threading.Tasks.Task<IProcessMgrObserver> CreateObjectReference(IProcessMgrObserver obj)
        {
            if (methodInvoker == null) methodInvoker = new ProcessMgrObserverMethodInvoker();
            return ProcessMgrObserverFactory.Cast(await global::Orleans.Runtime.GrainReference.CreateObjectReference(obj, methodInvoker));
        }

        public static System.Threading.Tasks.Task DeleteObjectReference(IProcessMgrObserver reference)
        {
            return global::Orleans.Runtime.GrainReference.DeleteObjectReference(reference);
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.ProcessManagement.IProcessMgrObserver")]
        internal class ProcessMgrObserverReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.ProcessManagement.IProcessMgrObserver
        {
            

            public static IProcessMgrObserver Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IProcessMgrObserver) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IProcessMgrObserver), (global::Orleans.Runtime.GrainReference gr) => { return new ProcessMgrObserverReference(gr);}, grainRef, 443569489);
            }
            
            protected internal ProcessMgrObserverReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ProcessMgrObserverReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 443569489;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.ProcessManagement.IProcessMgrObserver";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ProcessMgrObserverReference input = ((ProcessMgrObserverReference)(original));
                return ((ProcessMgrObserverReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ProcessMgrObserverReference input = ((ProcessMgrObserverReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ProcessMgrObserverReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ProcessMgrObserverMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            void PlayerProgression.ProcessManagement.IProcessMgrObserver.CreateProcess()
            {

                    base.InvokeOneWayMethod(651444950, null );
            }
            
            void PlayerProgression.ProcessManagement.IProcessMgrObserver.AddPlayer(System.Guid @gameId, long @playerId)
            {

                    base.InvokeOneWayMethod(1165721144, new object[] {@gameId, @playerId} );
            }
            
            void PlayerProgression.ProcessManagement.IProcessMgrObserver.StartGame(System.Guid @gameId)
            {

                    base.InvokeOneWayMethod(-561513888, new object[] {@gameId} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.ProcessManagement.IProcessMgrObserver", 443569489)]
    internal class ProcessMgrObserverMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 443569489;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 443569489:  // IProcessMgrObserver
                        switch (methodId)
                        {
                            case 651444950: 
                                ((IProcessMgrObserver)grain).CreateProcess(); return System.Threading.Tasks.Task.FromResult((object)true);
                            case 1165721144: 
                                ((IProcessMgrObserver)grain).AddPlayer((Guid)arguments[0], (Int64)arguments[1]); return System.Threading.Tasks.Task.FromResult((object)true);
                            case -561513888: 
                                ((IProcessMgrObserver)grain).StartGame((Guid)arguments[0]); return System.Threading.Tasks.Task.FromResult((object)true);
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 443569489:  // IProcessMgrObserver
                    switch (methodId)
                    {
                        case 651444950:
                            return "CreateProcess";
                    case 1165721144:
                            return "AddPlayer";
                    case -561513888:
                            return "StartGame";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    internal class ProcessStateFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IProcessState> instead.")]
                        public static IProcessState GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IProcessState), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IProcessState> instead.")]
                        public static IProcessState GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IProcessState), primaryKey, grainClassNamePrefix));
                        }

            public static IProcessState Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ProcessStateReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.ProcessManagement.IProcessState")]
        internal class ProcessStateReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.ProcessManagement.IProcessState
        {
            

            public static IProcessState Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IProcessState) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IProcessState), (global::Orleans.Runtime.GrainReference gr) => { return new ProcessStateReference(gr);}, grainRef, 1176883892);
            }
            
            protected internal ProcessStateReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ProcessStateReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1176883892;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.ProcessManagement.IProcessState";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ProcessStateReference input = ((ProcessStateReference)(original));
                return ((ProcessStateReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ProcessStateReference input = ((ProcessStateReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ProcessStateReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ProcessStateMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<System.Guid> PlayerProgression.ProcessManagement.IProcessState.GetProcess()
            {

                return base.InvokeMethodAsync<System.Guid>(-1754594990, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.ProcessManagement.IProcessState", 1176883892)]
    internal class ProcessStateMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1176883892;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1176883892:  // IProcessState
                        switch (methodId)
                        {
                            case -1754594990: 
                                return ((IProcessState)grain).GetProcess().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1176883892:  // IProcessState
                    switch (methodId)
                    {
                        case -1754594990:
                            return "GetProcess";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
namespace PlayerProgression.Player
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    using Orleans.Core;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class PlayerGrainFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IPlayerGrain> instead.")]
                        public static IPlayerGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IPlayerGrain), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IPlayerGrain> instead.")]
                        public static IPlayerGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IPlayerGrain), primaryKey, grainClassNamePrefix));
                        }

            public static IPlayerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return PlayerGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.Player.IPlayerGrain")]
        internal class PlayerGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.Player.IPlayerGrain
        {
            

            public static IPlayerGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IPlayerGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IPlayerGrain), (global::Orleans.Runtime.GrainReference gr) => { return new PlayerGrainReference(gr);}, grainRef, -191510093);
            }
            
            protected internal PlayerGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal PlayerGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -191510093;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.Player.IPlayerGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                PlayerGrainReference input = ((PlayerGrainReference)(original));
                return ((PlayerGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                PlayerGrainReference input = ((PlayerGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return PlayerGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return PlayerGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task PlayerProgression.Player.IPlayerGrain.JoinGame(PlayerProgression.Game.IGameGrain @game)
            {

                return base.InvokeMethodAsync<object>(1908871624, new object[] {@game is global::Orleans.Grain ? @game.AsReference<PlayerProgression.Game.IGameGrain>() : @game} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.Player.IPlayerGrain.LeaveGame(PlayerProgression.Game.IGameGrain @game)
            {

                return base.InvokeMethodAsync<object>(-1586169980, new object[] {@game is global::Orleans.Grain ? @game.AsReference<PlayerProgression.Game.IGameGrain>() : @game} );
            }
            
            System.Threading.Tasks.Task<System.Guid> PlayerProgression.Player.IPlayerGrain.QuickMatch()
            {

                return base.InvokeMethodAsync<System.Guid>(-553066157, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.Player.IPlayerGrain", -191510093)]
    internal class PlayerGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -191510093;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -191510093:  // IPlayerGrain
                        switch (methodId)
                        {
                            case 1908871624: 
                                return ((IPlayerGrain)grain).JoinGame((PlayerProgression.Game.IGameGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1586169980: 
                                return ((IPlayerGrain)grain).LeaveGame((PlayerProgression.Game.IGameGrain)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -553066157: 
                                return ((IPlayerGrain)grain).QuickMatch().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -191510093:  // IPlayerGrain
                    switch (methodId)
                    {
                        case 1908871624:
                            return "JoinGame";
                    case -1586169980:
                            return "LeaveGame";
                    case -553066157:
                            return "QuickMatch";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
namespace PlayerProgression
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using PlayerProgression;
    using Orleans;
    using Orleans.Runtime;
    using Orleans.Core;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class DispatcherFactory
    {
        

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IDispatcher> instead.")]
                        public static IDispatcher GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IDispatcher), primaryKey));
                        }

                        [System.Obsolete("This method has been deprecated. Please use GrainFactory.GetGrain<IDispatcher> instead.")]
                        public static IDispatcher GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IDispatcher), primaryKey, grainClassNamePrefix));
                        }

            public static IDispatcher Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return DispatcherReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("PlayerProgression.IDispatcher")]
        internal class DispatcherReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, PlayerProgression.IDispatcher
        {
            

            public static IDispatcher Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IDispatcher) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IDispatcher), (global::Orleans.Runtime.GrainReference gr) => { return new DispatcherReference(gr);}, grainRef, 707428655);
            }
            
            protected internal DispatcherReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal DispatcherReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 707428655;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "PlayerProgression.IDispatcher";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                DispatcherReference input = ((DispatcherReference)(original));
                return ((DispatcherReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                DispatcherReference input = ((DispatcherReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return DispatcherReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return DispatcherMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task PlayerProgression.IDispatcher.Heartbeat(byte[] @data)
            {

                return base.InvokeMethodAsync<object>(191938132, new object[] {@data} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IDispatcher.GameEnds(byte[] @data)
            {

                return base.InvokeMethodAsync<object>(-805292067, new object[] {@data} );
            }
            
            System.Threading.Tasks.Task PlayerProgression.IDispatcher.GameStarts(byte[] @data)
            {

                return base.InvokeMethodAsync<object>(2090791833, new object[] {@data} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("PlayerProgression.IDispatcher", 707428655)]
    internal class DispatcherMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 707428655;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 707428655:  // IDispatcher
                        switch (methodId)
                        {
                            case 191938132: 
                                return ((IDispatcher)grain).Heartbeat((Byte[])arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -805292067: 
                                return ((IDispatcher)grain).GameEnds((Byte[])arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 2090791833: 
                                return ((IDispatcher)grain).GameStarts((Byte[])arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 707428655:  // IDispatcher
                    switch (methodId)
                    {
                        case 191938132:
                            return "Heartbeat";
                    case -805292067:
                            return "GameEnds";
                    case 2090791833:
                            return "GameStarts";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PlayerProgression_GameStatusSerialization
    {
        
        static PlayerProgression_GameStatusSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PlayerProgression.GameStatus input = ((PlayerProgression.GameStatus)(original));
            PlayerProgression.GameStatus result = new PlayerProgression.GameStatus();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Status = ((System.Collections.Generic.Dictionary<System.Int64,PlayerProgression.Progression>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Status)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PlayerProgression.GameStatus input = ((PlayerProgression.GameStatus)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Status, stream, typeof(System.Collections.Generic.Dictionary<System.Int64,PlayerProgression.Progression>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PlayerProgression.GameStatus result = new PlayerProgression.GameStatus();
            result.Status = ((System.Collections.Generic.Dictionary<System.Int64,PlayerProgression.Progression>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.Dictionary<System.Int64,PlayerProgression.Progression>), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PlayerProgression.GameStatus), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.9.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PlayerProgression_ProgressionSerialization
    {
        
        static PlayerProgression_ProgressionSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PlayerProgression.Progression input = ((PlayerProgression.Progression)(original));
            PlayerProgression.Progression result = new PlayerProgression.Progression();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Death = input.Death;
            result.Experience = input.Experience;
            result.Kills = input.Kills;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PlayerProgression.Progression input = ((PlayerProgression.Progression)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Death, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Experience, stream, typeof(long));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Kills, stream, typeof(long));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PlayerProgression.Progression result = new PlayerProgression.Progression();
            result.Death = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            result.Experience = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            result.Kills = ((long)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(long), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PlayerProgression.Progression), DeepCopier, Serializer, Deserializer);
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
